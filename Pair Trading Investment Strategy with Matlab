Implementing Statistical Arbitrage with Pairs Trading and Backtesting
1.Main Idea
Statistical arbitrage, also known as Stat Arb, utilizes quantitative analysis to capitalize on mean reversion in stock prices or market microstructure anomalies. While it typically involves a diversified portfolio of securities, pairs trading focuses on just two cointegrated stocks. This strategy aims to profit from temporary price disparities between two highly correlated stocks by buying the underperforming stock and selling the outperforming one. If prices revert to their long-term average as expected, the trade benefits. However, if the price deviation persists due to structural reasons, there's a risk of loss.

In our approach, we first select the stock universe and identify pairs with high correlations, ensuring this is based on economic relationships to avoid spurious correlations. For instance, in this scenario, we have chosen the top 50 stocks in the pharmaceutical sector. We then gather the daily adjusted prices for these 50 stocks and calculate the correlation between each pair, visualizing the results using a heatmap, as depicted in Figure 1. The Pearson correlation coefficient is utilized to assess the relationship between these stocks. Notably, the highest correlation coefficient observed is between Pfizer (PFE) and Bristol Myers Squibb (BMY), which is 0.9209.



```matlab
% Linear Regression Model
Data1 = readtable('TwoStocks.xlsx');
Data = table2timetable(Data1);
PrimarySymbol = 'PFE';
SecondarySymbol = 'BMY';

r = diff(log(Data));
v = timetable2table(r);
x = table2array(v(:, 2:end));
PFEr = x(:,1);
BMYr = x(:,2);

% Fit a linear regression model
q = fitlm(PFEr, BMYr);
alphas = q.Coefficients.Estimate(1);
betas = q.Coefficients.Estimate(2);
pvals = q.Coefficients.pValue;
residuals = q.Residuals.Raw;

Errors = x(:,2) - (q.Coefficients.Estimate(1) + (x(:,1) * q.Coefficients.Estimate(2)));

figure;
plot(Data.Dates(1:end-1,:), Errors, 'DisplayName', sprintf('%s - %s', SecondarySymbol, PrimarySymbol));
title("Residuals from Regression (Spread of PFE,BMY)");
xlabel('Date');
ylabel('Values');

% Calculate z-score
Spread = Errors;
zscore = (Spread - mean(Spread)) / std(Spread);

% Plot z-score
plot(Data.Dates(1:end-1,:), zscore);
hold on;
threshold = 1.2;
plot([Data.Dates(1), Data.Dates(end-1)], [threshold, threshold], 'b--', 'LineWidth', 1.5);
plot([Data.Dates(1), Data.Dates(end-1)], [-threshold, -threshold], 'r--', 'LineWidth', 1.5);

title("Z-score BMY, PFE");
xlabel('Time');
ylabel('Values');
legend('z-score', '1.2 threshold
